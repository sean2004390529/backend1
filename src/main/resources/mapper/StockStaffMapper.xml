<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sean.base.mapper.StockStaffMapper">
  <resultMap id="BaseResultMap" type="com.sean.base.entity.StockStaff">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staffname" jdbcType="VARCHAR" property="staffname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, staffname, phone, email, dept_id, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock_staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock_staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sean.base.entity.StockStaff">
    insert into stock_staff (id, staffname, phone, 
      email, dept_id, create_time, 
      update_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{staffname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{updateTime,jdbcType=DATE}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sean.base.entity.StockStaff">
    insert into stock_staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffname != null">
        staffname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sean.base.entity.StockStaff">
    update stock_staff
    <set>
      <if test="staffname != null">
        staffname = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sean.base.entity.StockStaff">
    update stock_staff
    set staffname = #{staffname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 查询所有员工 -->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.sean.vo.req.StockStaffPageReqVO">
  	select <include refid="Base_Column_List"></include>
  	from stock_staff
  	<where>
      deleted=1
  	  <if test="staffname !=null and staffname != ''">
        and staffname like concat('%',#{staffname},'%')
      </if>
      <if test="email !=null and email != ''">
        and email like concat('%',#{email},'%')
      </if>
      <if test="phone !=null and phone != ''">
        and phone like concat('%',#{phone},'%')
      </if>
    </where>
  	order by id
  </select>
  
  <!--  批量逻辑删除员工(list需要删除员工用户的id列表) -->
  <update id="batchDeleteUser">
  	update stock_staff
  	set deleted=0
  	where id in
  	<foreach collection="list" open="(" close=")" separator="," item="item">
  		#{item}
  	</foreach>
  </update>
  
	<!-- 查询所有员工  没有分页-->
  <select id="selectAllNoPage" resultMap="BaseResultMap">
	select id, staffname
	from stock_staff
	where deleted=1
	order by id
  </select>
  
</mapper>